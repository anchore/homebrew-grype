# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Grype < Formula
  desc "A vulnerability scanner for container images and filesystems"
  homepage "https://github.com/anchore/grype"
  version "0.27.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/anchore/grype/releases/download/v0.27.0/grype_0.27.0_darwin_amd64.zip"
      sha256 "a653bec70999029f2d1e91c57bfca42b4ebc6e046e5f3436e82f180798923d8a"
    end
    if Hardware::CPU.arm?
      url "https://github.com/anchore/grype/releases/download/v0.27.0/grype_0.27.0_darwin_arm64.zip"
      sha256 "64255259b0ad4b752a1e9e52722aed5a6beaa4a6f5dfa43a971c9f9e3e96cd14"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/anchore/grype/releases/download/v0.27.0/grype_0.27.0_linux_amd64.tar.gz"
      sha256 "2312086561aa0b5ae955b7d60c586319aa1d702e628ab750dc836c5370162973"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/anchore/grype/releases/download/v0.27.0/grype_0.27.0_linux_arm64.tar.gz"
      sha256 "36f689cdf5e12f9ebec89287369d78692c5fbfe8df647485433f7bb7afa096ce"
    end
  end

  def install
    bin.install "grype"

    # Install bash completion
    output = Utils.popen_read("#{bin}/grype completion bash")
    (bash_completion/"grype").write output

    # Install zsh completion
    output = Utils.popen_read("#{bin}/grype completion zsh")
    (zsh_completion/"_grype").write output
  end
end
