# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Grype < Formula
  desc "A vulnerability scanner for container images and filesystems"
  homepage "https://github.com/anchore/grype"
  version "0.26.1"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/anchore/grype/releases/download/v0.26.1/grype_0.26.1_darwin_amd64.zip"
      sha256 "e77cda0cf0f536b4f1b3b332d0041488914502d65fffb5714601b937f8e44cf2"
    end
    if Hardware::CPU.arm?
      url "https://github.com/anchore/grype/releases/download/v0.26.1/grype_0.26.1_darwin_arm64.zip"
      sha256 "b7f1fc9e8a172f0000749bcd536fc049763f11b3582311aafc6bb073d022ed2c"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/anchore/grype/releases/download/v0.26.1/grype_0.26.1_linux_amd64.tar.gz"
      sha256 "12c988b6b3b9fdfeffacef624f990340260967ec0c9d5214c624131c59849e86"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/anchore/grype/releases/download/v0.26.1/grype_0.26.1_linux_arm64.tar.gz"
      sha256 "3829574e4e952a363bf3e9ff502c9dd030cfc317a298b7917b7f916392c99956"
    end
  end

  def install
    bin.install "grype"

    # Install bash completion
    output = Utils.popen_read("#{bin}/grype completion bash")
    (bash_completion/"grype").write output

    # Install zsh completion
    output = Utils.popen_read("#{bin}/grype completion zsh")
    (zsh_completion/"_grype").write output
  end
end
