# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Grype < Formula
  desc "A vulnerability scanner for container images and filesystems"
  homepage "https://github.com/anchore/grype"
  version "0.32.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/anchore/grype/releases/download/v0.32.0/grype_0.32.0_darwin_amd64.tar.gz"
      sha256 "250dddf3338d34012b55b4167b72f8bc87944e61aee35879342206a115a0f64b"
    end
    if Hardware::CPU.arm?
      url "https://github.com/anchore/grype/releases/download/v0.32.0/grype_0.32.0_darwin_arm64.tar.gz"
      sha256 "569b040bde6d369b9e3b96fb3d9d7ee5aa11267f3aa91fad3d8f4095f1cee150"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/anchore/grype/releases/download/v0.32.0/grype_0.32.0_linux_amd64.tar.gz"
      sha256 "dd4e5857856b4655511a75911fd7b53a3ebb9d2f584ae3c7ff7f52ad0dd93745"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/anchore/grype/releases/download/v0.32.0/grype_0.32.0_linux_arm64.tar.gz"
      sha256 "5c666286bca9d8c84f7355d5afe720186b0a06bed23ac0518a35a79ff905de28"
    end
  end

  def install
    bin.install "grype"

    # Install bash completion
    output = Utils.popen_read("#{bin}/grype completion bash")
    (bash_completion/"grype").write output

    # Install zsh completion
    output = Utils.popen_read("#{bin}/grype completion zsh")
    (zsh_completion/"_grype").write output
  end
end
