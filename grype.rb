# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Grype < Formula
  desc "A vulnerability scanner for container images and filesystems"
  homepage "https://github.com/anchore/grype"
  version "0.29.0"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/anchore/grype/releases/download/v0.29.0/grype_0.29.0_darwin_amd64.zip"
      sha256 "a9cb191e3e9e340c6dda59116dd0f602caae6a1ade3c0cd69d1c9b1d1ce9b3a2"
    end
    if Hardware::CPU.arm?
      url "https://github.com/anchore/grype/releases/download/v0.29.0/grype_0.29.0_darwin_arm64.zip"
      sha256 "96cd558f772f36e0be5e90ce5c47df7e0c0da7a98bd9457095691dcd1312ef6f"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/anchore/grype/releases/download/v0.29.0/grype_0.29.0_linux_amd64.tar.gz"
      sha256 "b32116d1c81f0b43e075276c54986a2f81e68822444b560247602c9063498216"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/anchore/grype/releases/download/v0.29.0/grype_0.29.0_linux_arm64.tar.gz"
      sha256 "9eec82739d7058e7e0cff4a870b0d34030524c97c715e412ce8960159b52e056"
    end
  end

  def install
    bin.install "grype"

    # Install bash completion
    output = Utils.popen_read("#{bin}/grype completion bash")
    (bash_completion/"grype").write output

    # Install zsh completion
    output = Utils.popen_read("#{bin}/grype completion zsh")
    (zsh_completion/"_grype").write output
  end
end
