# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Grype < Formula
  desc "A vulnerability scanner for container images and filesystems"
  homepage "https://github.com/anchore/grype"
  version "0.24.1"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/anchore/grype/releases/download/v0.24.1/grype_0.24.1_darwin_amd64.zip"
      sha256 "c4886ff919876dfb0d84881f26fdfa72fdc8c5ac5f4db912bdb3f0416a52d2b2"
    end
    if Hardware::CPU.arm?
      url "https://github.com/anchore/grype/releases/download/v0.24.1/grype_0.24.1_darwin_arm64.zip"
      sha256 "f5753a72052f39c42f8799db76a076546112dda937dcab2e2a720016ae631f2f"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/anchore/grype/releases/download/v0.24.1/grype_0.24.1_linux_amd64.tar.gz"
      sha256 "b6c871c9af786c79a03a9b257e7e5b065d6a6ff3756e0166625f1acdb12497ba"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/anchore/grype/releases/download/v0.24.1/grype_0.24.1_linux_arm64.tar.gz"
      sha256 "0ea77776d0d29c12e19465c13f40aaee42b41dbf85aac553554992f41fce4bd3"
    end
  end

  def install
    bin.install "grype"

    # Install bash completion
    output = Utils.popen_read("#{bin}/grype completion bash")
    (bash_completion/"grype").write output

    # Install zsh completion
    output = Utils.popen_read("#{bin}/grype completion zsh")
    (zsh_completion/"_grype").write output
  end
end
