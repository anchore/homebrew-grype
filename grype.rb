# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Grype < Formula
  desc "A vulnerability scanner for container images and filesystems"
  homepage "https://github.com/anchore/grype"
  version "0.25.1"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/anchore/grype/releases/download/v0.25.1/grype_0.25.1_darwin_amd64.zip"
      sha256 "52887e4adb05ccc23ef3facbd55602690ed5e565eb944675815f6d1cbe8be665"
    end
    if Hardware::CPU.arm?
      url "https://github.com/anchore/grype/releases/download/v0.25.1/grype_0.25.1_darwin_arm64.zip"
      sha256 "f291e9a18bb394deea82945772ec543d179136dd939584973b1ad71230cadb69"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/anchore/grype/releases/download/v0.25.1/grype_0.25.1_linux_amd64.tar.gz"
      sha256 "fd131bf2945d896ff22a35ec80ebc9eec3bacb52d77f56ffcae6d11a65673613"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/anchore/grype/releases/download/v0.25.1/grype_0.25.1_linux_arm64.tar.gz"
      sha256 "3d61be87b7984037f2908cc46a55ee1d3da0399d5e889813822ace232e163c95"
    end
  end

  def install
    bin.install "grype"

    # Install bash completion
    output = Utils.popen_read("#{bin}/grype completion bash")
    (bash_completion/"grype").write output

    # Install zsh completion
    output = Utils.popen_read("#{bin}/grype completion zsh")
    (zsh_completion/"_grype").write output
  end
end
